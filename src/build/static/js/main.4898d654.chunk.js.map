{"version":3,"sources":["pages/HomePage.js","components/ArticlesList.js","pages/AboutPage.js","pages/article-content.js","pages/ArticlesListPage.js","pages/NotFoundPage.js","components/UpvotesSection.js","components/AddCommentForm.js","components/CommentsList.js","pages/ArticlePage.js","navbar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","Fragment","class","className","ArticlesList","articles","map","article","key","to","name","title","content","substring","AboutPage","Button","variant","color","ArticlesListPage","articleContent","NotFoundPage","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","username","setUsername","commentText","setCommentText","addComment","JSON","stringify","text","headers","type","value","onChange","event","target","rows","cols","CommentsList","comments","style","overflow","height","comment","ArticlePage","match","params","find","articleInfo","useEffect","console","log","fetchData","otherArticles","filter","paragraph","NavBar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","path","component","exact","ArticleList","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4898d654.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst HomePage = () => (\r\n    <React.Fragment>\r\n        <div class={\"container\"}>\r\n            <h1 className={\"text-center\"}>Yup I Know!</h1>\r\n\r\n            <p className='text-success'>Test your knowledge and win prizes.</p>\r\n\r\n        </div>\r\n\r\n    </React.Fragment>\r\n)\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst ArticlesList = ({ articles }) => (\r\n\r\n<React.Fragment>\r\n        <div class=\"container\">\r\n\r\n            <br/>\r\n            <ul className=\"list-group\">\r\n                {\r\n                    articles.map((article, key) => (\r\n                        <Link className=\"list-group-item\" key={key} to={`/article/${article.name}`}>\r\n                            <h3>{article.title}</h3>\r\n                            <p>{article.content[0].substring(0,150)}...</p>\r\n                        </Link>\r\n\r\n\r\n                    ))\r\n\r\n                }\r\n\r\n            </ul>\r\n\r\n        </div>\r\n\r\n\r\n</React.Fragment>\r\n\r\n\r\n);\r\n\r\nexport default ArticlesList;","import React from 'react';\r\nimport ArticlesList from '../components/ArticlesList'\r\nimport ReactDOM from 'react-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\r\n\r\nconst AboutPage = () => (\r\n    <React.Fragment>\r\n        <h2 class=\"text-dark text-center\">Yup, I Know!</h2>\r\n        <p class='text-success'>About.</p>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n            Hello World\r\n        </Button>\r\n        <WbIncandescentIcon color=\"primary\"/>\r\n    </React.Fragment>\r\n)\r\n\r\nexport default AboutPage;","const articles = [\r\n\r\n    {\r\n        name:\"PHP\",\r\n        title: 'Laravel',\r\n        content: ['Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'],\r\n\r\n\r\n    },\r\n    {\r\n        name:\"Python\",\r\n        title: 'Flask',\r\n        content: ['A PHP Framework'],\r\n\r\n\r\n    },\r\n\r\n];\r\n\r\nexport default articles;","import React from 'react';\r\nimport ArticlesList from '../components/ArticlesList'\r\nimport articleContent from './article-content'\r\n\r\n\r\nconst ArticlesListPage = () => (\r\n    <React.Fragment>\r\n        <div class=\"container\">\r\n            <h2 className=\"text-dark\">List of Articles</h2>\r\n            <br/>\r\n            <ArticlesList articles={articleContent}/>\r\n        </div>\r\n\r\n\r\n    </React.Fragment>\r\n)\r\n\r\nexport default ArticlesListPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n\r\n    <h1 className={\"text-danger text-center\"}>404  Page Not Found</h1>\r\n\r\n);\r\n\r\nexport default  NotFoundPage;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\r\n    const upvoteArticle = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\r\n            method: 'post',\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n    return (\r\n        <div id=\"upvotes-section\">\r\n            <Button onClick={() => upvoteArticle()} variant=\"contained\" color=\"primary\">\r\n                Upvote\r\n            </Button>\r\n            <p>This post has been Up Voted {upvotes} times</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpvotesSection;","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const addComment = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n            method: 'post',\r\n            body: JSON.stringify({ username, text: commentText }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n        setUsername('');\r\n        setCommentText('');\r\n    }\r\n\r\n    return (\r\n        <div id=\"add-comment-form\">\r\n            <h3>Add a Comment</h3>\r\n            <div className=\"form-group\">\r\n            <label>\r\n                Name:\r\n                <input type=\"text\" className={\"form-control\"} value={username} onChange={(event) => setUsername(event.target.value)} />\r\n            </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n            <label>\r\n                Comment:\r\n                <textarea className={\"form-control\"}  rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\r\n            </label>\r\n            </div>\r\n            <Button onClick={() => addComment()} variant=\"contained\" color=\"primary\">Add Comment</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCommentForm;","import React from 'react';\r\n\r\nconst CommentsList = ({ comments }) => (\r\n    <>\r\n\r\n        <h3>Comments:</h3>\r\n        <div style={{overflow: \"scroll\", height: \"250px\"}}>\r\n            {comments.map((comment, key) => (\r\n            <div  key={key}>\r\n                <h4>{comment.username}</h4>\r\n                <p>{comment.text}</p>\r\n                <hr />\r\n            </div>\r\n        ))}\r\n\r\n        </div>\r\n        <br/>\r\n\r\n    </>\r\n);\r\n\r\nexport default CommentsList;","import React, { useState, useEffect } from 'react';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport NotFoundPage from './NotFoundPage';\r\nimport articleContent from './article-content';\r\nimport UpvotesSection from \"../components/UpvotesSection\";\r\nimport AddCommentForm from \"../components/AddCommentForm\";\r\nimport CommentsList from \"../components/CommentsList\";\r\n\r\n\r\nconst ArticlePage = ({ match }) => {\r\n    const name = match.params.name;\r\n    const article = articleContent.find(article => article.name === name);\r\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`/api/articles/${name}`);\r\n            console.log(result);\r\n            const body = await result.json();\r\n            console.log(body);\r\n            setArticleInfo(body);\r\n        }\r\n        fetchData();\r\n    }, [name]);\r\n\r\n    if (!article) return <NotFoundPage />\r\n\r\n    const otherArticles = articleContent.filter(article => article.name !== name);\r\n\r\n    return (\r\n        <>\r\n        <h1>{article.title}</h1>\r\n        <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo}/>\r\n\r\n    {article.content.map((paragraph, key) => (\r\n                <p key={key}>{paragraph}</p>\r\n            ))}\r\n        <div >\r\n        <hr/>\r\n        <CommentsList  comments={articleInfo.comments}/>\r\n        <hr/>\r\n        </div>\r\n\r\n        <AddCommentForm articleName={name} setArticleInfo={setArticleInfo}/>\r\n         <br/>\r\n        <h3>Other Articles:</h3>\r\n            <ArticlesList articles={otherArticles} />\r\n        <br/>\r\n            </>\r\n        );\r\n}\r\n\r\nexport default ArticlePage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => (\r\n<div >\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light \">\r\n        <a className=\"navbar-brand\" href=\"#\">Yup, I Know!</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n                aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item active\"><Link className=\"nav-link\" to='/'>Home</Link></li>\r\n                <li className=\"nav-item active\"><Link className=\"nav-link\" to='/about'>About</Link></li>\r\n                <li className=\"nav-item active\"><Link className=\"nav-link\" to='/list'>Articles</Link></li>\r\n\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n</div>\r\n\r\n\r\n\r\n\r\n)\r\n\r\nexport default NavBar;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch\n} from 'react-router-dom'\nimport HomePage from \"./pages/HomePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport ArticleList from \"./pages/ArticlesListPage\";\nimport ArticlePage from \"./pages/ArticlePage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport'bootstrap/dist/js/bootstrap.bundle.min';\nimport NavBar from \"./navbar\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\n\nfunction App() {\n  return (\n    <Router>\n\n            <NavBar/>\n            <div className={\"container\"}>\n                <br/>\n                <Switch>\n                    <Route path='/' component={HomePage} exact/>\n                    <Route path='/about' component={AboutPage} exact/>\n                    <Route path='/list' component={ArticleList} exact/>\n                    <Route path='/article/:name' component={ArticlePage} exact/>\n                    <Route  component={NotFoundPage} exact/>\n                </Switch>\n            </div>\n\n\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}